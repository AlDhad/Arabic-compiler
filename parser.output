Terminals unused in grammar

    VIDE
    OR
    AND
    SUP
    EGALE
    PASEGALE
    MUL


State 17 conflicts: 7 shift/reduce
State 25 conflicts: 18 shift/reduce
State 60 conflicts: 6 shift/reduce
State 97 conflicts: 6 shift/reduce
State 105 conflicts: 3 shift/reduce
State 130 conflicts: 7 shift/reduce
State 134 conflicts: 17 shift/reduce
State 140 conflicts: 3 shift/reduce
State 141 conflicts: 3 shift/reduce
State 142 conflicts: 3 shift/reduce
State 143 conflicts: 14 shift/reduce
State 144 conflicts: 3 shift/reduce
State 145 conflicts: 3 shift/reduce
State 146 conflicts: 3 shift/reduce
State 147 conflicts: 3 shift/reduce
State 148 conflicts: 3 shift/reduce
State 149 conflicts: 14 shift/reduce
State 150 conflicts: 14 shift/reduce
State 151 conflicts: 3 shift/reduce
State 152 conflicts: 3 shift/reduce
State 153 conflicts: 3 shift/reduce
State 154 conflicts: 17 shift/reduce
State 160 conflicts: 18 shift/reduce
State 166 conflicts: 2 shift/reduce
State 172 conflicts: 17 shift/reduce
State 179 conflicts: 17 shift/reduce
State 182 conflicts: 17 shift/reduce
State 183 conflicts: 2 shift/reduce


Grammar

    0 $accept: programme $end

    1 programme: functions DEBUT DEB_CORPS declarations instructions FIN SEMICOLON FIN_CORPS

    2 type: ENTIER
    3     | FLOTTANT
    4     | STRING
    5     | CHAR
    6     | CONST
    7     | BOOLEAN

    8 tableau: type ID DEB_TABLEAU INT FIN_TABLEAU

    9 type_Struct: ENREGISTREMENT ID DEB_CORPS declarations FIN_CORPS

   10 valeur: INT
   11       | FLOAT
   12       | CARACTERE
   13       | CHAINE
   14       | TRUE
   15       | FALSE

   16 variable: ID DEB_TABLEAU ENTIER FIN_TABLEAU
   17         | ID POINTEUR ID
   18         | ID

   19 expression: valeur
   20           | variable
   21           | expression PLUS expression
   22           | expression MOINS expression
   23           | expression MULT expression
   24           | expression DIV expression
   25           | expression MOD expression
   26           | expression PUISS expression
   27           | NOT expression
   28           | PAR_OUV expression PAR_FERM
   29           | expression INF expression
   30           | expression INF_EGAL expression
   31           | expression SUPP expression
   32           | expression SUPP_EGAL expression
   33           | expression EQUAL expression
   34           | expression NOT_EQUAL expression
   35           | expression ET expression
   36           | expression OU expression

   37 incrementation: variable INCREM
   38               | variable DECREM

   39 declarations: ε
   40             | declarations declaration

   41 declaration: type ID SEMICOLON
   42            | tableau SEMICOLON
   43            | type_Struct SEMICOLON

   44 functions: ε
   45          | functions fonction

   46 fonction: type FONCTION ID PAR_OUV parametres PAR_FERM corps
   47         | FONCTION ID PAR_OUV parametres PAR_FERM corps

   48 parametres: ε
   49           | parametre VIRGULE parametres
   50           | parametre

   51 parametre: type ID
   52          | TABLE ID
   53          | ENREGISTREMENT ID

   54 instructions: ε
   55             | instructions instruction

   56 instruction: ε
   57            | assignment
   58            | COMMENT
   59            | COMMENT_PLUS
   60            | condition
   61            | loop
   62            | read
   63            | write
   64            | incrementation SEMICOLON
   65            | retourner SEMICOLON
   66            | call

   67 read: INPUT PAR_OUV ID PAR_FERM SEMICOLON

   68 write: PRINT PAR_OUV CHAINE VIRGULE ID PAR_FERM SEMICOLON
   69      | PRINT PAR_OUV CHAINE PAR_FERM SEMICOLON

   70 retourner: RETURN expression

   71 assignment: parametre ASSIGN expression SEMICOLON
   72           | ID ASSIGN expression SEMICOLON

   73 condition: IF PAR_OUV expression PAR_FERM corps elsebloc

   74 loop: WHILE PAR_OUV expression PAR_FERM corps
   75     | FOR PAR_OUV ID FROM INT TO INT PAR_FERM corps

   76 corps: DEB_CORPS declarations instructions FIN_CORPS
   77      | instruction

   78 elsebloc: ε
   79         | ELSE corps
   80         | ELIF PAR_OUV expression PAR_FERM corps elsebloc

   81 call: ID PAR_OUV parametresCall PAR_FERM SEMICOLON

   82 parametresCall: ε
   83               | parametreCall VIRGULE parametresCall
   84               | parametreCall

   85 parametreCall: valeur
   86              | variable


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    DEBUT (258) 1
    FIN (259) 1
    WHILE (260) 74
    FOR (261) 75
    PRINT (262) 68 69
    INPUT (263) 67
    FONCTION (264) 46 47
    VIDE (265)
    RETURN (266) 70
    COMMENT (267) 58
    COMMENT_PLUS (268) 59
    OR (269)
    AND (270)
    NOT (271) 27
    IF (272) 73
    ELSE (273) 79
    ELIF (274) 80
    DEB_CORPS (275) 1 9 76
    FIN_CORPS (276) 1 9 76
    TRUE (277) 14
    FALSE (278) 15
    PAR_OUV (279) 28 46 47 67 68 69 73 74 75 80 81
    PAR_FERM (280) 28 46 47 67 68 69 73 74 75 80 81
    CARACTERE (281) 12
    CHAINE (282) 13 68 69
    INT (283) 8 10 75
    FLOAT (284) 11
    DEB_TABLEAU (285) 8 16
    FIN_TABLEAU (286) 8 16
    TABLE (287) 52
    ENREGISTREMENT (288) 9 53
    POINTEUR (289) 17
    CONST (290) 6
    ENTIER (291) 2 16
    FLOTTANT (292) 3
    STRING (293) 4
    CHAR (294) 5
    BOOLEAN (295) 7
    ID (296) 8 9 16 17 18 41 46 47 51 52 53 67 68 72 75 81
    INCREM (297) 37
    DECREM (298) 38
    PLUS (299) 21
    DIV (300) 24
    MOINS (301) 22
    MULT (302) 23
    MOD (303) 25
    PUISS (304) 26
    ASSIGN (305) 71 72
    SEMICOLON (306) 1 41 42 43 64 65 67 68 69 71 72 81
    INF (307) 29
    INF_EGAL (308) 30
    SUP (309)
    SUPP_EGAL (310) 32
    EQUAL (311) 33
    NOT_EQUAL (312) 34
    FROM (313) 75
    TO (314) 75
    VIRGULE (315) 49 68 83
    OU (316) 36
    ET (317) 35
    SUPP (318) 31
    EGALE (319)
    PASEGALE (320)
    MUL (321)


Nonterminals, with rules where they appear

    $accept (67)
        on left: 0
    programme (68)
        on left: 1
        on right: 0
    type (69)
        on left: 2 3 4 5 6 7
        on right: 8 41 46 51
    tableau (70)
        on left: 8
        on right: 42
    type_Struct (71)
        on left: 9
        on right: 43
    valeur (72)
        on left: 10 11 12 13 14 15
        on right: 19 85
    variable (73)
        on left: 16 17 18
        on right: 20 37 38 86
    expression (74)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
        on right: 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 70 71 72 73 74 80
    incrementation (75)
        on left: 37 38
        on right: 64
    declarations (76)
        on left: 39 40
        on right: 1 9 40 76
    declaration (77)
        on left: 41 42 43
        on right: 40
    functions (78)
        on left: 44 45
        on right: 1 45
    fonction (79)
        on left: 46 47
        on right: 45
    parametres (80)
        on left: 48 49 50
        on right: 46 47 49
    parametre (81)
        on left: 51 52 53
        on right: 49 50 71
    instructions (82)
        on left: 54 55
        on right: 1 55 76
    instruction (83)
        on left: 56 57 58 59 60 61 62 63 64 65 66
        on right: 55 77
    read (84)
        on left: 67
        on right: 62
    write (85)
        on left: 68 69
        on right: 63
    retourner (86)
        on left: 70
        on right: 65
    assignment (87)
        on left: 71 72
        on right: 57
    condition (88)
        on left: 73
        on right: 60
    loop (89)
        on left: 74 75
        on right: 61
    corps (90)
        on left: 76 77
        on right: 46 47 73 74 75 79 80
    elsebloc (91)
        on left: 78 79 80
        on right: 73 80
    call (92)
        on left: 81
        on right: 66
    parametresCall (93)
        on left: 82 83 84
        on right: 81 83
    parametreCall (94)
        on left: 85 86
        on right: 83 84


State 0

    0 $accept: • programme $end

    $default  reduce using rule 44 (functions)

    programme  go to state 1
    functions  go to state 2


State 1

    0 $accept: programme • $end

    $end  shift, and go to state 3


State 2

    1 programme: functions • DEBUT DEB_CORPS declarations instructions FIN SEMICOLON FIN_CORPS
   45 functions: functions • fonction

    DEBUT     shift, and go to state 4
    FONCTION  shift, and go to state 5
    CONST     shift, and go to state 6
    ENTIER    shift, and go to state 7
    FLOTTANT  shift, and go to state 8
    STRING    shift, and go to state 9
    CHAR      shift, and go to state 10
    BOOLEAN   shift, and go to state 11

    type      go to state 12
    fonction  go to state 13


State 3

    0 $accept: programme $end •

    $default  accept


State 4

    1 programme: functions DEBUT • DEB_CORPS declarations instructions FIN SEMICOLON FIN_CORPS

    DEB_CORPS  shift, and go to state 14


State 5

   47 fonction: FONCTION • ID PAR_OUV parametres PAR_FERM corps

    ID  shift, and go to state 15


State 6

    6 type: CONST •

    $default  reduce using rule 6 (type)


State 7

    2 type: ENTIER •

    $default  reduce using rule 2 (type)


State 8

    3 type: FLOTTANT •

    $default  reduce using rule 3 (type)


State 9

    4 type: STRING •

    $default  reduce using rule 4 (type)


State 10

    5 type: CHAR •

    $default  reduce using rule 5 (type)


State 11

    7 type: BOOLEAN •

    $default  reduce using rule 7 (type)


State 12

   46 fonction: type • FONCTION ID PAR_OUV parametres PAR_FERM corps

    FONCTION  shift, and go to state 16


State 13

   45 functions: functions fonction •

    $default  reduce using rule 45 (functions)


State 14

    1 programme: functions DEBUT DEB_CORPS • declarations instructions FIN SEMICOLON FIN_CORPS

    $default  reduce using rule 39 (declarations)

    declarations  go to state 17


State 15

   47 fonction: FONCTION ID • PAR_OUV parametres PAR_FERM corps

    PAR_OUV  shift, and go to state 18


State 16

   46 fonction: type FONCTION • ID PAR_OUV parametres PAR_FERM corps

    ID  shift, and go to state 19


State 17

    1 programme: functions DEBUT DEB_CORPS declarations • instructions FIN SEMICOLON FIN_CORPS
   40 declarations: declarations • declaration

    ENREGISTREMENT  shift, and go to state 20
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11

    ENREGISTREMENT  [reduce using rule 54 (instructions)]
    CONST           [reduce using rule 54 (instructions)]
    ENTIER          [reduce using rule 54 (instructions)]
    FLOTTANT        [reduce using rule 54 (instructions)]
    STRING          [reduce using rule 54 (instructions)]
    CHAR            [reduce using rule 54 (instructions)]
    BOOLEAN         [reduce using rule 54 (instructions)]
    $default        reduce using rule 54 (instructions)

    type          go to state 21
    tableau       go to state 22
    type_Struct   go to state 23
    declaration   go to state 24
    instructions  go to state 25


State 18

   47 fonction: FONCTION ID PAR_OUV • parametres PAR_FERM corps

    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11

    $default  reduce using rule 48 (parametres)

    type        go to state 28
    parametres  go to state 29
    parametre   go to state 30


State 19

   46 fonction: type FONCTION ID • PAR_OUV parametres PAR_FERM corps

    PAR_OUV  shift, and go to state 31


State 20

    9 type_Struct: ENREGISTREMENT • ID DEB_CORPS declarations FIN_CORPS

    ID  shift, and go to state 32


State 21

    8 tableau: type • ID DEB_TABLEAU INT FIN_TABLEAU
   41 declaration: type • ID SEMICOLON

    ID  shift, and go to state 33


State 22

   42 declaration: tableau • SEMICOLON

    SEMICOLON  shift, and go to state 34


State 23

   43 declaration: type_Struct • SEMICOLON

    SEMICOLON  shift, and go to state 35


State 24

   40 declarations: declarations declaration •

    $default  reduce using rule 40 (declarations)


State 25

    1 programme: functions DEBUT DEB_CORPS declarations instructions • FIN SEMICOLON FIN_CORPS
   55 instructions: instructions • instruction

    FIN             shift, and go to state 36
    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    PRINT           shift, and go to state 39
    INPUT           shift, and go to state 40
    RETURN          shift, and go to state 41
    COMMENT         shift, and go to state 42
    COMMENT_PLUS    shift, and go to state 43
    IF              shift, and go to state 44
    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11
    ID              shift, and go to state 45

    FIN             [reduce using rule 56 (instruction)]
    WHILE           [reduce using rule 56 (instruction)]
    FOR             [reduce using rule 56 (instruction)]
    PRINT           [reduce using rule 56 (instruction)]
    INPUT           [reduce using rule 56 (instruction)]
    RETURN          [reduce using rule 56 (instruction)]
    COMMENT         [reduce using rule 56 (instruction)]
    COMMENT_PLUS    [reduce using rule 56 (instruction)]
    IF              [reduce using rule 56 (instruction)]
    TABLE           [reduce using rule 56 (instruction)]
    ENREGISTREMENT  [reduce using rule 56 (instruction)]
    CONST           [reduce using rule 56 (instruction)]
    ENTIER          [reduce using rule 56 (instruction)]
    FLOTTANT        [reduce using rule 56 (instruction)]
    STRING          [reduce using rule 56 (instruction)]
    CHAR            [reduce using rule 56 (instruction)]
    BOOLEAN         [reduce using rule 56 (instruction)]
    ID              [reduce using rule 56 (instruction)]

    type            go to state 28
    variable        go to state 46
    incrementation  go to state 47
    parametre       go to state 48
    instruction     go to state 49
    read            go to state 50
    write           go to state 51
    retourner       go to state 52
    assignment      go to state 53
    condition       go to state 54
    loop            go to state 55
    call            go to state 56


State 26

   52 parametre: TABLE • ID

    ID  shift, and go to state 57


State 27

   53 parametre: ENREGISTREMENT • ID

    ID  shift, and go to state 58


State 28

   51 parametre: type • ID

    ID  shift, and go to state 59


State 29

   47 fonction: FONCTION ID PAR_OUV parametres • PAR_FERM corps

    PAR_FERM  shift, and go to state 60


State 30

   49 parametres: parametre • VIRGULE parametres
   50           | parametre •

    VIRGULE  shift, and go to state 61

    $default  reduce using rule 50 (parametres)


State 31

   46 fonction: type FONCTION ID PAR_OUV • parametres PAR_FERM corps

    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11

    $default  reduce using rule 48 (parametres)

    type        go to state 28
    parametres  go to state 62
    parametre   go to state 30


State 32

    9 type_Struct: ENREGISTREMENT ID • DEB_CORPS declarations FIN_CORPS

    DEB_CORPS  shift, and go to state 63


State 33

    8 tableau: type ID • DEB_TABLEAU INT FIN_TABLEAU
   41 declaration: type ID • SEMICOLON

    DEB_TABLEAU  shift, and go to state 64
    SEMICOLON    shift, and go to state 65


State 34

   42 declaration: tableau SEMICOLON •

    $default  reduce using rule 42 (declaration)


State 35

   43 declaration: type_Struct SEMICOLON •

    $default  reduce using rule 43 (declaration)


State 36

    1 programme: functions DEBUT DEB_CORPS declarations instructions FIN • SEMICOLON FIN_CORPS

    SEMICOLON  shift, and go to state 66


State 37

   74 loop: WHILE • PAR_OUV expression PAR_FERM corps

    PAR_OUV  shift, and go to state 67


State 38

   75 loop: FOR • PAR_OUV ID FROM INT TO INT PAR_FERM corps

    PAR_OUV  shift, and go to state 68


State 39

   68 write: PRINT • PAR_OUV CHAINE VIRGULE ID PAR_FERM SEMICOLON
   69      | PRINT • PAR_OUV CHAINE PAR_FERM SEMICOLON

    PAR_OUV  shift, and go to state 69


State 40

   67 read: INPUT • PAR_OUV ID PAR_FERM SEMICOLON

    PAR_OUV  shift, and go to state 70


State 41

   70 retourner: RETURN • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 82


State 42

   58 instruction: COMMENT •

    $default  reduce using rule 58 (instruction)


State 43

   59 instruction: COMMENT_PLUS •

    $default  reduce using rule 59 (instruction)


State 44

   73 condition: IF • PAR_OUV expression PAR_FERM corps elsebloc

    PAR_OUV  shift, and go to state 83


State 45

   16 variable: ID • DEB_TABLEAU ENTIER FIN_TABLEAU
   17         | ID • POINTEUR ID
   18         | ID •
   72 assignment: ID • ASSIGN expression SEMICOLON
   81 call: ID • PAR_OUV parametresCall PAR_FERM SEMICOLON

    PAR_OUV      shift, and go to state 84
    DEB_TABLEAU  shift, and go to state 85
    POINTEUR     shift, and go to state 86
    ASSIGN       shift, and go to state 87

    $default  reduce using rule 18 (variable)


State 46

   37 incrementation: variable • INCREM
   38               | variable • DECREM

    INCREM  shift, and go to state 88
    DECREM  shift, and go to state 89


State 47

   64 instruction: incrementation • SEMICOLON

    SEMICOLON  shift, and go to state 90


State 48

   71 assignment: parametre • ASSIGN expression SEMICOLON

    ASSIGN  shift, and go to state 91


State 49

   55 instructions: instructions instruction •

    $default  reduce using rule 55 (instructions)


State 50

   62 instruction: read •

    $default  reduce using rule 62 (instruction)


State 51

   63 instruction: write •

    $default  reduce using rule 63 (instruction)


State 52

   65 instruction: retourner • SEMICOLON

    SEMICOLON  shift, and go to state 92


State 53

   57 instruction: assignment •

    $default  reduce using rule 57 (instruction)


State 54

   60 instruction: condition •

    $default  reduce using rule 60 (instruction)


State 55

   61 instruction: loop •

    $default  reduce using rule 61 (instruction)


State 56

   66 instruction: call •

    $default  reduce using rule 66 (instruction)


State 57

   52 parametre: TABLE ID •

    $default  reduce using rule 52 (parametre)


State 58

   53 parametre: ENREGISTREMENT ID •

    $default  reduce using rule 53 (parametre)


State 59

   51 parametre: type ID •

    $default  reduce using rule 51 (parametre)


State 60

   47 fonction: FONCTION ID PAR_OUV parametres PAR_FERM • corps

    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    PRINT           shift, and go to state 39
    INPUT           shift, and go to state 40
    RETURN          shift, and go to state 41
    COMMENT         shift, and go to state 42
    COMMENT_PLUS    shift, and go to state 43
    IF              shift, and go to state 44
    DEB_CORPS       shift, and go to state 93
    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11
    ID              shift, and go to state 45

    CONST     [reduce using rule 56 (instruction)]
    ENTIER    [reduce using rule 56 (instruction)]
    FLOTTANT  [reduce using rule 56 (instruction)]
    STRING    [reduce using rule 56 (instruction)]
    CHAR      [reduce using rule 56 (instruction)]
    BOOLEAN   [reduce using rule 56 (instruction)]
    $default  reduce using rule 56 (instruction)

    type            go to state 28
    variable        go to state 46
    incrementation  go to state 47
    parametre       go to state 48
    instruction     go to state 94
    read            go to state 50
    write           go to state 51
    retourner       go to state 52
    assignment      go to state 53
    condition       go to state 54
    loop            go to state 55
    corps           go to state 95
    call            go to state 56


State 61

   49 parametres: parametre VIRGULE • parametres

    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11

    $default  reduce using rule 48 (parametres)

    type        go to state 28
    parametres  go to state 96
    parametre   go to state 30


State 62

   46 fonction: type FONCTION ID PAR_OUV parametres • PAR_FERM corps

    PAR_FERM  shift, and go to state 97


State 63

    9 type_Struct: ENREGISTREMENT ID DEB_CORPS • declarations FIN_CORPS

    $default  reduce using rule 39 (declarations)

    declarations  go to state 98


State 64

    8 tableau: type ID DEB_TABLEAU • INT FIN_TABLEAU

    INT  shift, and go to state 99


State 65

   41 declaration: type ID SEMICOLON •

    $default  reduce using rule 41 (declaration)


State 66

    1 programme: functions DEBUT DEB_CORPS declarations instructions FIN SEMICOLON • FIN_CORPS

    FIN_CORPS  shift, and go to state 100


State 67

   74 loop: WHILE PAR_OUV • expression PAR_FERM corps

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 101


State 68

   75 loop: FOR PAR_OUV • ID FROM INT TO INT PAR_FERM corps

    ID  shift, and go to state 102


State 69

   68 write: PRINT PAR_OUV • CHAINE VIRGULE ID PAR_FERM SEMICOLON
   69      | PRINT PAR_OUV • CHAINE PAR_FERM SEMICOLON

    CHAINE  shift, and go to state 103


State 70

   67 read: INPUT PAR_OUV • ID PAR_FERM SEMICOLON

    ID  shift, and go to state 104


State 71

   27 expression: NOT • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 105


State 72

   14 valeur: TRUE •

    $default  reduce using rule 14 (valeur)


State 73

   15 valeur: FALSE •

    $default  reduce using rule 15 (valeur)


State 74

   28 expression: PAR_OUV • expression PAR_FERM

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 106


State 75

   12 valeur: CARACTERE •

    $default  reduce using rule 12 (valeur)


State 76

   13 valeur: CHAINE •

    $default  reduce using rule 13 (valeur)


State 77

   10 valeur: INT •

    $default  reduce using rule 10 (valeur)


State 78

   11 valeur: FLOAT •

    $default  reduce using rule 11 (valeur)


State 79

   16 variable: ID • DEB_TABLEAU ENTIER FIN_TABLEAU
   17         | ID • POINTEUR ID
   18         | ID •

    DEB_TABLEAU  shift, and go to state 85
    POINTEUR     shift, and go to state 86

    $default  reduce using rule 18 (variable)


State 80

   19 expression: valeur •

    $default  reduce using rule 19 (expression)


State 81

   20 expression: variable •

    $default  reduce using rule 20 (expression)


State 82

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression
   70 retourner: RETURN expression •

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120

    $default  reduce using rule 70 (retourner)


State 83

   73 condition: IF PAR_OUV • expression PAR_FERM corps elsebloc

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 121


State 84

   81 call: ID PAR_OUV • parametresCall PAR_FERM SEMICOLON

    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    $default  reduce using rule 82 (parametresCall)

    valeur          go to state 122
    variable        go to state 123
    parametresCall  go to state 124
    parametreCall   go to state 125


State 85

   16 variable: ID DEB_TABLEAU • ENTIER FIN_TABLEAU

    ENTIER  shift, and go to state 126


State 86

   17 variable: ID POINTEUR • ID

    ID  shift, and go to state 127


State 87

   72 assignment: ID ASSIGN • expression SEMICOLON

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 128


State 88

   37 incrementation: variable INCREM •

    $default  reduce using rule 37 (incrementation)


State 89

   38 incrementation: variable DECREM •

    $default  reduce using rule 38 (incrementation)


State 90

   64 instruction: incrementation SEMICOLON •

    $default  reduce using rule 64 (instruction)


State 91

   71 assignment: parametre ASSIGN • expression SEMICOLON

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 129


State 92

   65 instruction: retourner SEMICOLON •

    $default  reduce using rule 65 (instruction)


State 93

   76 corps: DEB_CORPS • declarations instructions FIN_CORPS

    $default  reduce using rule 39 (declarations)

    declarations  go to state 130


State 94

   77 corps: instruction •

    $default  reduce using rule 77 (corps)


State 95

   47 fonction: FONCTION ID PAR_OUV parametres PAR_FERM corps •

    $default  reduce using rule 47 (fonction)


State 96

   49 parametres: parametre VIRGULE parametres •

    $default  reduce using rule 49 (parametres)


State 97

   46 fonction: type FONCTION ID PAR_OUV parametres PAR_FERM • corps

    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    PRINT           shift, and go to state 39
    INPUT           shift, and go to state 40
    RETURN          shift, and go to state 41
    COMMENT         shift, and go to state 42
    COMMENT_PLUS    shift, and go to state 43
    IF              shift, and go to state 44
    DEB_CORPS       shift, and go to state 93
    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11
    ID              shift, and go to state 45

    CONST     [reduce using rule 56 (instruction)]
    ENTIER    [reduce using rule 56 (instruction)]
    FLOTTANT  [reduce using rule 56 (instruction)]
    STRING    [reduce using rule 56 (instruction)]
    CHAR      [reduce using rule 56 (instruction)]
    BOOLEAN   [reduce using rule 56 (instruction)]
    $default  reduce using rule 56 (instruction)

    type            go to state 28
    variable        go to state 46
    incrementation  go to state 47
    parametre       go to state 48
    instruction     go to state 94
    read            go to state 50
    write           go to state 51
    retourner       go to state 52
    assignment      go to state 53
    condition       go to state 54
    loop            go to state 55
    corps           go to state 131
    call            go to state 56


State 98

    9 type_Struct: ENREGISTREMENT ID DEB_CORPS declarations • FIN_CORPS
   40 declarations: declarations • declaration

    FIN_CORPS       shift, and go to state 132
    ENREGISTREMENT  shift, and go to state 20
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11

    type         go to state 21
    tableau      go to state 22
    type_Struct  go to state 23
    declaration  go to state 24


State 99

    8 tableau: type ID DEB_TABLEAU INT • FIN_TABLEAU

    FIN_TABLEAU  shift, and go to state 133


State 100

    1 programme: functions DEBUT DEB_CORPS declarations instructions FIN SEMICOLON FIN_CORPS •

    $default  reduce using rule 1 (programme)


State 101

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression
   74 loop: WHILE PAR_OUV expression • PAR_FERM corps

    PAR_FERM   shift, and go to state 134
    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120


State 102

   75 loop: FOR PAR_OUV ID • FROM INT TO INT PAR_FERM corps

    FROM  shift, and go to state 135


State 103

   68 write: PRINT PAR_OUV CHAINE • VIRGULE ID PAR_FERM SEMICOLON
   69      | PRINT PAR_OUV CHAINE • PAR_FERM SEMICOLON

    PAR_FERM  shift, and go to state 136
    VIRGULE   shift, and go to state 137


State 104

   67 read: INPUT PAR_OUV ID • PAR_FERM SEMICOLON

    PAR_FERM  shift, and go to state 138


State 105

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   27           | NOT expression •
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    SUPP       shift, and go to state 120

    MULT       [reduce using rule 27 (expression)]
    EQUAL      [reduce using rule 27 (expression)]
    NOT_EQUAL  [reduce using rule 27 (expression)]
    $default   reduce using rule 27 (expression)


State 106

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   28           | PAR_OUV expression • PAR_FERM
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PAR_FERM   shift, and go to state 139
    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120


State 107

   21 expression: expression PLUS • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 140


State 108

   24 expression: expression DIV • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 141


State 109

   22 expression: expression MOINS • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 142


State 110

   23 expression: expression MULT • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 143


State 111

   25 expression: expression MOD • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 144


State 112

   26 expression: expression PUISS • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 145


State 113

   29 expression: expression INF • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 146


State 114

   30 expression: expression INF_EGAL • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 147


State 115

   32 expression: expression SUPP_EGAL • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 148


State 116

   33 expression: expression EQUAL • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 149


State 117

   34 expression: expression NOT_EQUAL • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 150


State 118

   36 expression: expression OU • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 151


State 119

   35 expression: expression ET • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 152


State 120

   31 expression: expression SUPP • expression

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 153


State 121

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression
   73 condition: IF PAR_OUV expression • PAR_FERM corps elsebloc

    PAR_FERM   shift, and go to state 154
    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120


State 122

   85 parametreCall: valeur •

    $default  reduce using rule 85 (parametreCall)


State 123

   86 parametreCall: variable •

    $default  reduce using rule 86 (parametreCall)


State 124

   81 call: ID PAR_OUV parametresCall • PAR_FERM SEMICOLON

    PAR_FERM  shift, and go to state 155


State 125

   83 parametresCall: parametreCall • VIRGULE parametresCall
   84               | parametreCall •

    VIRGULE  shift, and go to state 156

    $default  reduce using rule 84 (parametresCall)


State 126

   16 variable: ID DEB_TABLEAU ENTIER • FIN_TABLEAU

    FIN_TABLEAU  shift, and go to state 157


State 127

   17 variable: ID POINTEUR ID •

    $default  reduce using rule 17 (variable)


State 128

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression
   72 assignment: ID ASSIGN expression • SEMICOLON

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    SEMICOLON  shift, and go to state 158
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120


State 129

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression
   71 assignment: parametre ASSIGN expression • SEMICOLON

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    SEMICOLON  shift, and go to state 159
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120


State 130

   40 declarations: declarations • declaration
   76 corps: DEB_CORPS declarations • instructions FIN_CORPS

    ENREGISTREMENT  shift, and go to state 20
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11

    ENREGISTREMENT  [reduce using rule 54 (instructions)]
    CONST           [reduce using rule 54 (instructions)]
    ENTIER          [reduce using rule 54 (instructions)]
    FLOTTANT        [reduce using rule 54 (instructions)]
    STRING          [reduce using rule 54 (instructions)]
    CHAR            [reduce using rule 54 (instructions)]
    BOOLEAN         [reduce using rule 54 (instructions)]
    $default        reduce using rule 54 (instructions)

    type          go to state 21
    tableau       go to state 22
    type_Struct   go to state 23
    declaration   go to state 24
    instructions  go to state 160


State 131

   46 fonction: type FONCTION ID PAR_OUV parametres PAR_FERM corps •

    $default  reduce using rule 46 (fonction)


State 132

    9 type_Struct: ENREGISTREMENT ID DEB_CORPS declarations FIN_CORPS •

    $default  reduce using rule 9 (type_Struct)


State 133

    8 tableau: type ID DEB_TABLEAU INT FIN_TABLEAU •

    $default  reduce using rule 8 (tableau)


State 134

   74 loop: WHILE PAR_OUV expression PAR_FERM • corps

    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    PRINT           shift, and go to state 39
    INPUT           shift, and go to state 40
    RETURN          shift, and go to state 41
    COMMENT         shift, and go to state 42
    COMMENT_PLUS    shift, and go to state 43
    IF              shift, and go to state 44
    DEB_CORPS       shift, and go to state 93
    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11
    ID              shift, and go to state 45

    WHILE           [reduce using rule 56 (instruction)]
    FOR             [reduce using rule 56 (instruction)]
    PRINT           [reduce using rule 56 (instruction)]
    INPUT           [reduce using rule 56 (instruction)]
    RETURN          [reduce using rule 56 (instruction)]
    COMMENT         [reduce using rule 56 (instruction)]
    COMMENT_PLUS    [reduce using rule 56 (instruction)]
    IF              [reduce using rule 56 (instruction)]
    TABLE           [reduce using rule 56 (instruction)]
    ENREGISTREMENT  [reduce using rule 56 (instruction)]
    CONST           [reduce using rule 56 (instruction)]
    ENTIER          [reduce using rule 56 (instruction)]
    FLOTTANT        [reduce using rule 56 (instruction)]
    STRING          [reduce using rule 56 (instruction)]
    CHAR            [reduce using rule 56 (instruction)]
    BOOLEAN         [reduce using rule 56 (instruction)]
    ID              [reduce using rule 56 (instruction)]
    $default        reduce using rule 56 (instruction)

    type            go to state 28
    variable        go to state 46
    incrementation  go to state 47
    parametre       go to state 48
    instruction     go to state 94
    read            go to state 50
    write           go to state 51
    retourner       go to state 52
    assignment      go to state 53
    condition       go to state 54
    loop            go to state 55
    corps           go to state 161
    call            go to state 56


State 135

   75 loop: FOR PAR_OUV ID FROM • INT TO INT PAR_FERM corps

    INT  shift, and go to state 162


State 136

   69 write: PRINT PAR_OUV CHAINE PAR_FERM • SEMICOLON

    SEMICOLON  shift, and go to state 163


State 137

   68 write: PRINT PAR_OUV CHAINE VIRGULE • ID PAR_FERM SEMICOLON

    ID  shift, and go to state 164


State 138

   67 read: INPUT PAR_OUV ID PAR_FERM • SEMICOLON

    SEMICOLON  shift, and go to state 165


State 139

   28 expression: PAR_OUV expression PAR_FERM •

    $default  reduce using rule 28 (expression)


State 140

   21 expression: expression • PLUS expression
   21           | expression PLUS expression •
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117

    MULT       [reduce using rule 21 (expression)]
    EQUAL      [reduce using rule 21 (expression)]
    NOT_EQUAL  [reduce using rule 21 (expression)]
    $default   reduce using rule 21 (expression)


State 141

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   24           | expression DIV expression •
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    DIV        shift, and go to state 108
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117

    MULT       [reduce using rule 24 (expression)]
    EQUAL      [reduce using rule 24 (expression)]
    NOT_EQUAL  [reduce using rule 24 (expression)]
    $default   reduce using rule 24 (expression)


State 142

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   22           | expression MOINS expression •
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117

    MULT       [reduce using rule 22 (expression)]
    EQUAL      [reduce using rule 22 (expression)]
    NOT_EQUAL  [reduce using rule 22 (expression)]
    $default   reduce using rule 22 (expression)


State 143

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   23           | expression MULT expression •
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120

    PLUS       [reduce using rule 23 (expression)]
    DIV        [reduce using rule 23 (expression)]
    MOINS      [reduce using rule 23 (expression)]
    MULT       [reduce using rule 23 (expression)]
    MOD        [reduce using rule 23 (expression)]
    PUISS      [reduce using rule 23 (expression)]
    INF        [reduce using rule 23 (expression)]
    INF_EGAL   [reduce using rule 23 (expression)]
    SUPP_EGAL  [reduce using rule 23 (expression)]
    EQUAL      [reduce using rule 23 (expression)]
    NOT_EQUAL  [reduce using rule 23 (expression)]
    OU         [reduce using rule 23 (expression)]
    ET         [reduce using rule 23 (expression)]
    SUPP       [reduce using rule 23 (expression)]
    $default   reduce using rule 23 (expression)


State 144

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   25           | expression MOD expression •
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    DIV        shift, and go to state 108
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117

    MULT       [reduce using rule 25 (expression)]
    EQUAL      [reduce using rule 25 (expression)]
    NOT_EQUAL  [reduce using rule 25 (expression)]
    $default   reduce using rule 25 (expression)


State 145

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   26           | expression PUISS expression •
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    MULT       shift, and go to state 110
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117

    MULT       [reduce using rule 26 (expression)]
    EQUAL      [reduce using rule 26 (expression)]
    NOT_EQUAL  [reduce using rule 26 (expression)]
    $default   reduce using rule 26 (expression)


State 146

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   29           | expression INF expression •
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    SUPP       shift, and go to state 120

    MULT       [reduce using rule 29 (expression)]
    EQUAL      [reduce using rule 29 (expression)]
    NOT_EQUAL  [reduce using rule 29 (expression)]
    $default   reduce using rule 29 (expression)


State 147

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   30           | expression INF_EGAL expression •
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    SUPP       shift, and go to state 120

    MULT       [reduce using rule 30 (expression)]
    EQUAL      [reduce using rule 30 (expression)]
    NOT_EQUAL  [reduce using rule 30 (expression)]
    $default   reduce using rule 30 (expression)


State 148

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   32           | expression SUPP_EGAL expression •
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    SUPP       shift, and go to state 120

    MULT       [reduce using rule 32 (expression)]
    EQUAL      [reduce using rule 32 (expression)]
    NOT_EQUAL  [reduce using rule 32 (expression)]
    $default   reduce using rule 32 (expression)


State 149

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   33           | expression EQUAL expression •
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120

    PLUS       [reduce using rule 33 (expression)]
    DIV        [reduce using rule 33 (expression)]
    MOINS      [reduce using rule 33 (expression)]
    MULT       [reduce using rule 33 (expression)]
    MOD        [reduce using rule 33 (expression)]
    PUISS      [reduce using rule 33 (expression)]
    INF        [reduce using rule 33 (expression)]
    INF_EGAL   [reduce using rule 33 (expression)]
    SUPP_EGAL  [reduce using rule 33 (expression)]
    EQUAL      [reduce using rule 33 (expression)]
    NOT_EQUAL  [reduce using rule 33 (expression)]
    OU         [reduce using rule 33 (expression)]
    ET         [reduce using rule 33 (expression)]
    SUPP       [reduce using rule 33 (expression)]
    $default   reduce using rule 33 (expression)


State 150

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   34           | expression NOT_EQUAL expression •
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120

    PLUS       [reduce using rule 34 (expression)]
    DIV        [reduce using rule 34 (expression)]
    MOINS      [reduce using rule 34 (expression)]
    MULT       [reduce using rule 34 (expression)]
    MOD        [reduce using rule 34 (expression)]
    PUISS      [reduce using rule 34 (expression)]
    INF        [reduce using rule 34 (expression)]
    INF_EGAL   [reduce using rule 34 (expression)]
    SUPP_EGAL  [reduce using rule 34 (expression)]
    EQUAL      [reduce using rule 34 (expression)]
    NOT_EQUAL  [reduce using rule 34 (expression)]
    OU         [reduce using rule 34 (expression)]
    ET         [reduce using rule 34 (expression)]
    SUPP       [reduce using rule 34 (expression)]
    $default   reduce using rule 34 (expression)


State 151

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression
   36           | expression OU expression •

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120

    MULT       [reduce using rule 36 (expression)]
    EQUAL      [reduce using rule 36 (expression)]
    NOT_EQUAL  [reduce using rule 36 (expression)]
    $default   reduce using rule 36 (expression)


State 152

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   35           | expression ET expression •
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120

    MULT       [reduce using rule 35 (expression)]
    EQUAL      [reduce using rule 35 (expression)]
    NOT_EQUAL  [reduce using rule 35 (expression)]
    $default   reduce using rule 35 (expression)


State 153

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   31           | expression SUPP expression •
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression

    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    SUPP       shift, and go to state 120

    MULT       [reduce using rule 31 (expression)]
    EQUAL      [reduce using rule 31 (expression)]
    NOT_EQUAL  [reduce using rule 31 (expression)]
    $default   reduce using rule 31 (expression)


State 154

   73 condition: IF PAR_OUV expression PAR_FERM • corps elsebloc

    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    PRINT           shift, and go to state 39
    INPUT           shift, and go to state 40
    RETURN          shift, and go to state 41
    COMMENT         shift, and go to state 42
    COMMENT_PLUS    shift, and go to state 43
    IF              shift, and go to state 44
    DEB_CORPS       shift, and go to state 93
    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11
    ID              shift, and go to state 45

    WHILE           [reduce using rule 56 (instruction)]
    FOR             [reduce using rule 56 (instruction)]
    PRINT           [reduce using rule 56 (instruction)]
    INPUT           [reduce using rule 56 (instruction)]
    RETURN          [reduce using rule 56 (instruction)]
    COMMENT         [reduce using rule 56 (instruction)]
    COMMENT_PLUS    [reduce using rule 56 (instruction)]
    IF              [reduce using rule 56 (instruction)]
    TABLE           [reduce using rule 56 (instruction)]
    ENREGISTREMENT  [reduce using rule 56 (instruction)]
    CONST           [reduce using rule 56 (instruction)]
    ENTIER          [reduce using rule 56 (instruction)]
    FLOTTANT        [reduce using rule 56 (instruction)]
    STRING          [reduce using rule 56 (instruction)]
    CHAR            [reduce using rule 56 (instruction)]
    BOOLEAN         [reduce using rule 56 (instruction)]
    ID              [reduce using rule 56 (instruction)]
    $default        reduce using rule 56 (instruction)

    type            go to state 28
    variable        go to state 46
    incrementation  go to state 47
    parametre       go to state 48
    instruction     go to state 94
    read            go to state 50
    write           go to state 51
    retourner       go to state 52
    assignment      go to state 53
    condition       go to state 54
    loop            go to state 55
    corps           go to state 166
    call            go to state 56


State 155

   81 call: ID PAR_OUV parametresCall PAR_FERM • SEMICOLON

    SEMICOLON  shift, and go to state 167


State 156

   83 parametresCall: parametreCall VIRGULE • parametresCall

    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    $default  reduce using rule 82 (parametresCall)

    valeur          go to state 122
    variable        go to state 123
    parametresCall  go to state 168
    parametreCall   go to state 125


State 157

   16 variable: ID DEB_TABLEAU ENTIER FIN_TABLEAU •

    $default  reduce using rule 16 (variable)


State 158

   72 assignment: ID ASSIGN expression SEMICOLON •

    $default  reduce using rule 72 (assignment)


State 159

   71 assignment: parametre ASSIGN expression SEMICOLON •

    $default  reduce using rule 71 (assignment)


State 160

   55 instructions: instructions • instruction
   76 corps: DEB_CORPS declarations instructions • FIN_CORPS

    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    PRINT           shift, and go to state 39
    INPUT           shift, and go to state 40
    RETURN          shift, and go to state 41
    COMMENT         shift, and go to state 42
    COMMENT_PLUS    shift, and go to state 43
    IF              shift, and go to state 44
    FIN_CORPS       shift, and go to state 169
    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11
    ID              shift, and go to state 45

    WHILE           [reduce using rule 56 (instruction)]
    FOR             [reduce using rule 56 (instruction)]
    PRINT           [reduce using rule 56 (instruction)]
    INPUT           [reduce using rule 56 (instruction)]
    RETURN          [reduce using rule 56 (instruction)]
    COMMENT         [reduce using rule 56 (instruction)]
    COMMENT_PLUS    [reduce using rule 56 (instruction)]
    IF              [reduce using rule 56 (instruction)]
    FIN_CORPS       [reduce using rule 56 (instruction)]
    TABLE           [reduce using rule 56 (instruction)]
    ENREGISTREMENT  [reduce using rule 56 (instruction)]
    CONST           [reduce using rule 56 (instruction)]
    ENTIER          [reduce using rule 56 (instruction)]
    FLOTTANT        [reduce using rule 56 (instruction)]
    STRING          [reduce using rule 56 (instruction)]
    CHAR            [reduce using rule 56 (instruction)]
    BOOLEAN         [reduce using rule 56 (instruction)]
    ID              [reduce using rule 56 (instruction)]

    type            go to state 28
    variable        go to state 46
    incrementation  go to state 47
    parametre       go to state 48
    instruction     go to state 49
    read            go to state 50
    write           go to state 51
    retourner       go to state 52
    assignment      go to state 53
    condition       go to state 54
    loop            go to state 55
    call            go to state 56


State 161

   74 loop: WHILE PAR_OUV expression PAR_FERM corps •

    $default  reduce using rule 74 (loop)


State 162

   75 loop: FOR PAR_OUV ID FROM INT • TO INT PAR_FERM corps

    TO  shift, and go to state 170


State 163

   69 write: PRINT PAR_OUV CHAINE PAR_FERM SEMICOLON •

    $default  reduce using rule 69 (write)


State 164

   68 write: PRINT PAR_OUV CHAINE VIRGULE ID • PAR_FERM SEMICOLON

    PAR_FERM  shift, and go to state 171


State 165

   67 read: INPUT PAR_OUV ID PAR_FERM SEMICOLON •

    $default  reduce using rule 67 (read)


State 166

   73 condition: IF PAR_OUV expression PAR_FERM corps • elsebloc

    ELSE  shift, and go to state 172
    ELIF  shift, and go to state 173

    ELSE      [reduce using rule 78 (elsebloc)]
    ELIF      [reduce using rule 78 (elsebloc)]
    $default  reduce using rule 78 (elsebloc)

    elsebloc  go to state 174


State 167

   81 call: ID PAR_OUV parametresCall PAR_FERM SEMICOLON •

    $default  reduce using rule 81 (call)


State 168

   83 parametresCall: parametreCall VIRGULE parametresCall •

    $default  reduce using rule 83 (parametresCall)


State 169

   76 corps: DEB_CORPS declarations instructions FIN_CORPS •

    $default  reduce using rule 76 (corps)


State 170

   75 loop: FOR PAR_OUV ID FROM INT TO • INT PAR_FERM corps

    INT  shift, and go to state 175


State 171

   68 write: PRINT PAR_OUV CHAINE VIRGULE ID PAR_FERM • SEMICOLON

    SEMICOLON  shift, and go to state 176


State 172

   79 elsebloc: ELSE • corps

    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    PRINT           shift, and go to state 39
    INPUT           shift, and go to state 40
    RETURN          shift, and go to state 41
    COMMENT         shift, and go to state 42
    COMMENT_PLUS    shift, and go to state 43
    IF              shift, and go to state 44
    DEB_CORPS       shift, and go to state 93
    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11
    ID              shift, and go to state 45

    WHILE           [reduce using rule 56 (instruction)]
    FOR             [reduce using rule 56 (instruction)]
    PRINT           [reduce using rule 56 (instruction)]
    INPUT           [reduce using rule 56 (instruction)]
    RETURN          [reduce using rule 56 (instruction)]
    COMMENT         [reduce using rule 56 (instruction)]
    COMMENT_PLUS    [reduce using rule 56 (instruction)]
    IF              [reduce using rule 56 (instruction)]
    TABLE           [reduce using rule 56 (instruction)]
    ENREGISTREMENT  [reduce using rule 56 (instruction)]
    CONST           [reduce using rule 56 (instruction)]
    ENTIER          [reduce using rule 56 (instruction)]
    FLOTTANT        [reduce using rule 56 (instruction)]
    STRING          [reduce using rule 56 (instruction)]
    CHAR            [reduce using rule 56 (instruction)]
    BOOLEAN         [reduce using rule 56 (instruction)]
    ID              [reduce using rule 56 (instruction)]
    $default        reduce using rule 56 (instruction)

    type            go to state 28
    variable        go to state 46
    incrementation  go to state 47
    parametre       go to state 48
    instruction     go to state 94
    read            go to state 50
    write           go to state 51
    retourner       go to state 52
    assignment      go to state 53
    condition       go to state 54
    loop            go to state 55
    corps           go to state 177
    call            go to state 56


State 173

   80 elsebloc: ELIF • PAR_OUV expression PAR_FERM corps elsebloc

    PAR_OUV  shift, and go to state 178


State 174

   73 condition: IF PAR_OUV expression PAR_FERM corps elsebloc •

    $default  reduce using rule 73 (condition)


State 175

   75 loop: FOR PAR_OUV ID FROM INT TO INT • PAR_FERM corps

    PAR_FERM  shift, and go to state 179


State 176

   68 write: PRINT PAR_OUV CHAINE VIRGULE ID PAR_FERM SEMICOLON •

    $default  reduce using rule 68 (write)


State 177

   79 elsebloc: ELSE corps •

    $default  reduce using rule 79 (elsebloc)


State 178

   80 elsebloc: ELIF PAR_OUV • expression PAR_FERM corps elsebloc

    NOT        shift, and go to state 71
    TRUE       shift, and go to state 72
    FALSE      shift, and go to state 73
    PAR_OUV    shift, and go to state 74
    CARACTERE  shift, and go to state 75
    CHAINE     shift, and go to state 76
    INT        shift, and go to state 77
    FLOAT      shift, and go to state 78
    ID         shift, and go to state 79

    valeur      go to state 80
    variable    go to state 81
    expression  go to state 180


State 179

   75 loop: FOR PAR_OUV ID FROM INT TO INT PAR_FERM • corps

    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    PRINT           shift, and go to state 39
    INPUT           shift, and go to state 40
    RETURN          shift, and go to state 41
    COMMENT         shift, and go to state 42
    COMMENT_PLUS    shift, and go to state 43
    IF              shift, and go to state 44
    DEB_CORPS       shift, and go to state 93
    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11
    ID              shift, and go to state 45

    WHILE           [reduce using rule 56 (instruction)]
    FOR             [reduce using rule 56 (instruction)]
    PRINT           [reduce using rule 56 (instruction)]
    INPUT           [reduce using rule 56 (instruction)]
    RETURN          [reduce using rule 56 (instruction)]
    COMMENT         [reduce using rule 56 (instruction)]
    COMMENT_PLUS    [reduce using rule 56 (instruction)]
    IF              [reduce using rule 56 (instruction)]
    TABLE           [reduce using rule 56 (instruction)]
    ENREGISTREMENT  [reduce using rule 56 (instruction)]
    CONST           [reduce using rule 56 (instruction)]
    ENTIER          [reduce using rule 56 (instruction)]
    FLOTTANT        [reduce using rule 56 (instruction)]
    STRING          [reduce using rule 56 (instruction)]
    CHAR            [reduce using rule 56 (instruction)]
    BOOLEAN         [reduce using rule 56 (instruction)]
    ID              [reduce using rule 56 (instruction)]
    $default        reduce using rule 56 (instruction)

    type            go to state 28
    variable        go to state 46
    incrementation  go to state 47
    parametre       go to state 48
    instruction     go to state 94
    read            go to state 50
    write           go to state 51
    retourner       go to state 52
    assignment      go to state 53
    condition       go to state 54
    loop            go to state 55
    corps           go to state 181
    call            go to state 56


State 180

   21 expression: expression • PLUS expression
   22           | expression • MOINS expression
   23           | expression • MULT expression
   24           | expression • DIV expression
   25           | expression • MOD expression
   26           | expression • PUISS expression
   29           | expression • INF expression
   30           | expression • INF_EGAL expression
   31           | expression • SUPP expression
   32           | expression • SUPP_EGAL expression
   33           | expression • EQUAL expression
   34           | expression • NOT_EQUAL expression
   35           | expression • ET expression
   36           | expression • OU expression
   80 elsebloc: ELIF PAR_OUV expression • PAR_FERM corps elsebloc

    PAR_FERM   shift, and go to state 182
    PLUS       shift, and go to state 107
    DIV        shift, and go to state 108
    MOINS      shift, and go to state 109
    MULT       shift, and go to state 110
    MOD        shift, and go to state 111
    PUISS      shift, and go to state 112
    INF        shift, and go to state 113
    INF_EGAL   shift, and go to state 114
    SUPP_EGAL  shift, and go to state 115
    EQUAL      shift, and go to state 116
    NOT_EQUAL  shift, and go to state 117
    OU         shift, and go to state 118
    ET         shift, and go to state 119
    SUPP       shift, and go to state 120


State 181

   75 loop: FOR PAR_OUV ID FROM INT TO INT PAR_FERM corps •

    $default  reduce using rule 75 (loop)


State 182

   80 elsebloc: ELIF PAR_OUV expression PAR_FERM • corps elsebloc

    WHILE           shift, and go to state 37
    FOR             shift, and go to state 38
    PRINT           shift, and go to state 39
    INPUT           shift, and go to state 40
    RETURN          shift, and go to state 41
    COMMENT         shift, and go to state 42
    COMMENT_PLUS    shift, and go to state 43
    IF              shift, and go to state 44
    DEB_CORPS       shift, and go to state 93
    TABLE           shift, and go to state 26
    ENREGISTREMENT  shift, and go to state 27
    CONST           shift, and go to state 6
    ENTIER          shift, and go to state 7
    FLOTTANT        shift, and go to state 8
    STRING          shift, and go to state 9
    CHAR            shift, and go to state 10
    BOOLEAN         shift, and go to state 11
    ID              shift, and go to state 45

    WHILE           [reduce using rule 56 (instruction)]
    FOR             [reduce using rule 56 (instruction)]
    PRINT           [reduce using rule 56 (instruction)]
    INPUT           [reduce using rule 56 (instruction)]
    RETURN          [reduce using rule 56 (instruction)]
    COMMENT         [reduce using rule 56 (instruction)]
    COMMENT_PLUS    [reduce using rule 56 (instruction)]
    IF              [reduce using rule 56 (instruction)]
    TABLE           [reduce using rule 56 (instruction)]
    ENREGISTREMENT  [reduce using rule 56 (instruction)]
    CONST           [reduce using rule 56 (instruction)]
    ENTIER          [reduce using rule 56 (instruction)]
    FLOTTANT        [reduce using rule 56 (instruction)]
    STRING          [reduce using rule 56 (instruction)]
    CHAR            [reduce using rule 56 (instruction)]
    BOOLEAN         [reduce using rule 56 (instruction)]
    ID              [reduce using rule 56 (instruction)]
    $default        reduce using rule 56 (instruction)

    type            go to state 28
    variable        go to state 46
    incrementation  go to state 47
    parametre       go to state 48
    instruction     go to state 94
    read            go to state 50
    write           go to state 51
    retourner       go to state 52
    assignment      go to state 53
    condition       go to state 54
    loop            go to state 55
    corps           go to state 183
    call            go to state 56


State 183

   80 elsebloc: ELIF PAR_OUV expression PAR_FERM corps • elsebloc

    ELSE  shift, and go to state 172
    ELIF  shift, and go to state 173

    ELSE      [reduce using rule 78 (elsebloc)]
    ELIF      [reduce using rule 78 (elsebloc)]
    $default  reduce using rule 78 (elsebloc)

    elsebloc  go to state 184


State 184

   80 elsebloc: ELIF PAR_OUV expression PAR_FERM corps elsebloc •

    $default  reduce using rule 80 (elsebloc)
